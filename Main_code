module morse_code_generator(
    input wire clk,            
    input wire reset_button,   
    input wire [4:0] slide_switches, 
    output reg [6:0] seg_display, 
    output reg [15:0] leds,
    output wire D0_AN
);

    reg [6:0] char_to_display [0:25]; 
        initial begin
        char_to_display[0]  = 7'b0000100; // A
        char_to_display[1]  = 7'b0000000; // B
        char_to_display[2]  = 7'b0110001; // C
        char_to_display[3]  = 7'b0000001; // D
        char_to_display[4]  = 7'b0110000; // E
        char_to_display[5]  = 7'b0111000; // F
        char_to_display[6]  = 7'b0100001; // G
        char_to_display[7]  = 7'b1001000; // H
        char_to_display[8]  = 7'b1001111; // I
        char_to_display[9]  = 7'b0000011; // J
        char_to_display[10] = 7'b1001000; // K
        char_to_display[11] = 7'b1110001; // L
        char_to_display[12] = 7'b0001001; // M
        char_to_display[13] = 7'b0001001; // N
        char_to_display[14] = 7'b0000001; // O
        char_to_display[15] = 7'b0001100; // P
        char_to_display[16] = 7'b0000001; // 0
        char_to_display[17] = 7'b1001111; // 1
        char_to_display[18] = 7'b0010010; // 2
        char_to_display[19] = 7'b0000110; // 3
        char_to_display[20] = 7'b1001100; // 4
        char_to_display[21] = 7'b0100100; // 5
        char_to_display[22] = 7'b0100000; // 6
        char_to_display[23] = 7'b0001111; // 7
        char_to_display[24] = 7'b0000000; // 8 
        char_to_display[25] = 7'b0000100; // 9
    end

    reg [4:0] selected_char;  
    assign D0_AN = 1;
 
    always @ (posedge clk) begin
        if (reset_button) begin
            selected_char <= 0;
            seg_display <= 7'b0000000;
            leds <= 16'b1111111111111111;
        end else begin
            selected_char <= slide_switches;
            if (selected_char < 26) begin
                seg_display <= char_to_display[selected_char];
                leds <= 16'b0000000000000000; 
            end else begin
                seg_display <= 7'b1111111; 
                leds <= 16'b0000000000000000; 
            end
        end
    end
endmodule
